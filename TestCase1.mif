Depth = 256;
Width = 32;
Address_radix = hex;
Data_radix = bin;
% Program RAM Data %					-- This program will test these instructios :
							-- lw, addu, and, xor, or, sub, multu, and j
Content
  Begin
00 : 10001100000000010000000000110000	;		-- lw $s1, 30($s0)	 / 	load word in adress 24 + s0 to s1	// s1 = 4
04 : 10001100001000100000000000110000	;		-- lw $s2, 30($s1) 	 / 	load word in adress 24 + s1 to s2	// s2 = 5
08 : 00000000001000100001100000100001	;		-- addu $s3, $s1, $s2 	 / 	s3 = s1 + s2				// s3 = 9
0C : 00000000010000110010000000100100	;		-- and $s4, $s2, $s3	 /	s4 = s2 and s3				// s4 = 1
10 : 00000000011001000010100000100110	;		-- xor $s5, $s3, $s4	 / 	s5 = s3 xor s4				// s5 = 8
14 : 00000000011000010011000000100101	;		-- or  $s6, $s3, $s1     / 	s6 = s3 or  s1				// s6 = D
18 : 00000000110001000011100000100011	;		-- sub $s7, $s6, $s4     /      s7 = s6 - s4				// s7 = C
1C : 00000000011000100000000000011001	;		-- multu $s3, $s2	 /  	Lo = s3 * s2				// LO = 2D
20 : 00010100001000000000000000000001   ;		-- bne       / If s1 != s0 jump to 28.
24 : 00001000000000000000000000000000	;		-- j  24		 / 	infinite loop
28 : 00000000001000100001100000100001	;		-- addu $s3, $s1, $s2 	 / 	s3 = s1 + s2				// s3 = 
2C : 00001000000000000000000000000000	;		-- j  2C		 / 	infinite loop
30 : 00000000000000000000000000000100	;		-- 4
34 : 00000000000000000000000000000101	;		-- 5


End;

